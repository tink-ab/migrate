load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "address_translators.go",
        "cluster.go",
        "compressor.go",
        "conn.go",
        "connectionpool.go",
        "control.go",
        "debug_off.go",
        "doc.go",
        "errors.go",
        "events.go",
        "filters.go",
        "frame.go",
        "helpers.go",
        "host_source.go",
        "logger.go",
        "marshal.go",
        "metadata.go",
        "policies.go",
        "prepared_cache.go",
        "query_executor.go",
        "ring.go",
        "session.go",
        "token.go",
        "topology.go",
        "uuid.go",
    ],
    importpath = "github.com/gocql/gocql",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/gocql/gocql/internal/lru:go_default_library",
        "//vendor/github.com/gocql/gocql/internal/murmur:go_default_library",
        "//vendor/github.com/gocql/gocql/internal/streams:go_default_library",
        "//vendor/github.com/golang/snappy:go_default_library",
        "//vendor/github.com/hailocab/go-hostpool:go_default_library",
        "//vendor/gopkg.in/inf.v0:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "address_translators_test.go",
        "cluster_test.go",
        "common_test.go",
        "control_test.go",
        "events_test.go",
        "filters_test.go",
        "frame_test.go",
        "framer_bench_test.go",
        "metadata_test.go",
        "policies_test.go",
        "ring_test.go",
        "session_connect_test.go",
        "token_test.go",
    ],
    data = glob(["testdata/**"]),
    importpath = "github.com/gocql/gocql",
    library = ":go_default_library",
    deps = ["//vendor/github.com/hailocab/go-hostpool:go_default_library"],
)
