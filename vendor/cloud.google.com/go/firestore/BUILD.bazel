load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "client.go",
        "collref.go",
        "doc.go",
        "docref.go",
        "document.go",
        "fieldpath.go",
        "from_value.go",
        "options.go",
        "query.go",
        "to_value.go",
        "transaction.go",
        "writebatch.go",
    ],
    importpath = "cloud.google.com/go/firestore",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/cloud.google.com/go/firestore/apiv1beta1:go_default_library",
        "//vendor/cloud.google.com/go/internal/fields:go_default_library",
        "//vendor/cloud.google.com/go/internal/version:go_default_library",
        "//vendor/github.com/golang/protobuf/proto:go_default_library",
        "//vendor/github.com/golang/protobuf/ptypes:go_default_library",
        "//vendor/github.com/golang/protobuf/ptypes/wrappers:go_default_library",
        "//vendor/github.com/googleapis/gax-go:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
        "//vendor/google.golang.org/api/iterator:go_default_library",
        "//vendor/google.golang.org/api/option:go_default_library",
        "//vendor/google.golang.org/genproto/googleapis/firestore/v1beta1:go_default_library",
        "//vendor/google.golang.org/genproto/googleapis/type/latlng:go_default_library",
        "//vendor/google.golang.org/grpc:go_default_library",
        "//vendor/google.golang.org/grpc/codes:go_default_library",
        "//vendor/google.golang.org/grpc/metadata:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "client_test.go",
        "collref_test.go",
        "docref_test.go",
        "document_test.go",
        "fieldpath_test.go",
        "from_value_test.go",
        "integration_test.go",
        "mock_test.go",
        "options_test.go",
        "query_test.go",
        "to_value_test.go",
        "transaction_test.go",
        "util_test.go",
        "writebatch_test.go",
    ],
    data = glob(["testdata/**"]),
    importpath = "cloud.google.com/go/firestore",
    library = ":go_default_library",
    deps = [
        "//vendor/cloud.google.com/go/internal/pretty:go_default_library",
        "//vendor/cloud.google.com/go/internal/testutil:go_default_library",
        "//vendor/github.com/golang/protobuf/proto:go_default_library",
        "//vendor/github.com/golang/protobuf/ptypes:go_default_library",
        "//vendor/github.com/golang/protobuf/ptypes/empty:go_default_library",
        "//vendor/github.com/golang/protobuf/ptypes/timestamp:go_default_library",
        "//vendor/github.com/golang/protobuf/ptypes/wrappers:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
        "//vendor/google.golang.org/api/iterator:go_default_library",
        "//vendor/google.golang.org/api/option:go_default_library",
        "//vendor/google.golang.org/genproto/googleapis/firestore/v1beta1:go_default_library",
        "//vendor/google.golang.org/genproto/googleapis/type/latlng:go_default_library",
        "//vendor/google.golang.org/grpc:go_default_library",
        "//vendor/google.golang.org/grpc/codes:go_default_library",
        "//vendor/google.golang.org/grpc/metadata:go_default_library",
    ],
)

go_test(
    name = "go_default_xtest",
    srcs = ["examples_test.go"],
    data = glob(["testdata/**"]),
    importpath = "cloud.google.com/go/firestore_test",
    deps = [
        ":go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
        "//vendor/google.golang.org/api/iterator:go_default_library",
    ],
)
